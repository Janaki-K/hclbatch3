---
- name: verify app server is running or not
  shell: if ps -eaf | grep 'httpd' | grep -v grep > /dev/null; then echo 'process_running'; else echo'process_not_running'; fi
  ignore_errors: true
  register: app_proc_check
- debug: 
    msg: "{{ app_proc_check.stdout }}"
- name: Decision point to start patching
  fail:
    msg="{{ inventory_hostname }} having running application , please stop first and then attempt patching"
  when: app_proc_check.stdout == "process_running"   
- name: current kernal version
  shell: uname -r
  register: curr_ker
- name: intializing patching
  yum:
    name: kernel
    state: latest
  register: yum_update
- debug:
    msg: "kernel has been update"
  when: yum_update.rc == 0
- name: check if reboot is required or not
  shell: kernel_new=$(rpm -qa --last kernel | head -1 | awk '{print $1}' | sed 's/kernal-//g') kernel_now=$(uname -r); if [[ $kernel_new != $kernel_now]]; then echo "reboot is required" else "echo "reboot is not required"; fi
  ignore_error: true
  register: reboot_check
- debug:
    msg: "{{ reboot_check.stdout }}"
- name: rebooting after patching
  command: reboot
  when: reboot_check.stdout == "reboot is required"
- name: reboot the system after patching
  shell: "shutdown -r now"
  async: 1
  poll: 0
- name: wait for the system to come up
  pause:
    minutes: 1
- name: new kernal version
  shell: uname -r
  register: new_ker
- debug:
  msg: "new kernal version is {{ new_ker.stdout }} and olde kernal version was {{ curr_ker }} "
